
name: Unit Tests

on:
  pull_request:
    types: [synchronize]
  push:
  registry_package:
    types: [published, updated]
  release:
    types: [published, edited, released]
jobs:
  test-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Ubuntu - Check out source
        uses: actions/checkout@v2
      - name: Ubuntu - Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9.7' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
      - name: Ubuntu - Run Unit Tests with Coverage
        run: |
          DEBUG=1
          PYTHON="$( which python3; )"
          PYTHON3="$( which python3; )"
          COLUMNS=250
          export COLUMNS
          export PYTHON
          export PYTHON3
          export DEBUG
          "$PYTHON" -m pip install cython -r requirements.txt
          python3 -m coverage run --rcfile=.coveragerc --source=.,./src/use,./src/use/modules,./tests,./tests/.tests,./tests/.tests/tests_subdir,./tests/mass --append --branch -m pytest
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: 20fb71ba-3e2b-46db-b86d-e1666d56665b
          CODECOV_TOKEN: 20fb71ba-3e2b-46db-b86d-e1666d56665b
          fail_ci_if_error: false # optional (default = false)
          files: ./.coverage,./coverage/cov.xml # optional
          flags: unittests # optional
          name: codecov-justuse # optional
          verbose: true # optional (default = false)


  test-windows-x86:
    runs-on: windows-latest
    steps:
      - name: Windows - Check out source
        uses: actions/checkout@v2
      - name: Windows - Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9.7' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x86' # optional x64 or x86. Defaults to x64 if not specified
      - name: Windows - Run Unit Tests with Coverage
        run: |
          $env:FTP_USER = "${{ secrets.FTP_USER }}"
          $env:FTP_PASS = "${{ secrets.FTP_PASS }}"
          $env:DEBUG = 1
          $env:DEBUGGING = 1
          $env:ERRORS = 1
          $env:COLUMNS = 250
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
          & "python.exe" -m pip install --exists-action s --prefer-binary --no-compile --upgrade cython -r requirements.txt pywavelets sqlalchemy
          & "python.exe" -m pytest --cov-branch --cov-report term-missing --cov-report html:coverage-win32-x86/ --cov-report annotate:coverage-win32-x86/annotated --cov-report xml:coverage-win32-x86/cov.xml --cov=setup --cov=tests..tests..test1 --cov=tests..tests..test2 --cov=tests..tests..test3 --cov=tests..tests.bar --cov=tests..tests.foo --cov=tests..tests.modA --cov=tests..tests.modA_test --cov=tests..tests.modB --cov=tests..tests.modD --cov=tests..tests.modE --cov=tests..tests.sys --cov=tests..tests.tests_subdir.modC --cov=tests.__init__ --cov=tests.foo --cov=tests.simple_funcs --cov=tests.tdd_test --cov=tests.test --cov=tests.unit_test --cov=use.__init__ --cov=use.use -v --cov-append -vv
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: 20fb71ba-3e2b-46db-b86d-e1666d56665b
          CODECOV_TOKEN: 20fb71ba-3e2b-46db-b86d-e1666d56665b
          fail_ci_if_error: false # optional (default = false)
          files: ./.coverage,./coverage/cov.xml # optional
          flags: unittests # optional
          name: codecov-justuse # optional
          verbose: true # optional (default = false)


  test-windows-x64:
    runs-on: windows-latest
    steps:
      - name: Windows - Check out source
        uses: actions/checkout@v2
      - name: Windows - Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9.7' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
      - name: Windows - Run Unit Tests with Coverage
        run: |
          $env:FTP_USER = "${{ secrets.FTP_USER }}"
          $env:FTP_PASS = "${{ secrets.FTP_PASS }}"
          $env:DEBUG = 1
          $env:DEBUGGING = 1
          $env:ERRORS = 1
          $env:COLUMNS = 250
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
          & "python.exe" -m pip install --exists-action s --prefer-binary --no-compile --upgrade cython -r requirements.txt pywavelets sqlalchemy
          & "python.exe" -m pytest --cov-branch --cov-report term-missing --cov-report html:coverage-win32-x64/ --cov-report annotate:coverage-win32-x64/annotated --cov-report xml:coverage-win32-x64/cov.xml --cov=setup --cov=tests..tests..test1 --cov=tests..tests..test2 --cov=tests..tests..test3 --cov=tests..tests.bar --cov=tests..tests.foo --cov=tests..tests.modA --cov=tests..tests.modA_test --cov=tests..tests.modB --cov=tests..tests.modD --cov=tests..tests.modE --cov=tests..tests.sys --cov=tests..tests.tests_subdir.modC --cov=tests.__init__ --cov=tests.foo --cov=tests.simple_funcs --cov=tests.tdd_test --cov=tests.test --cov=tests.unit_test --cov=use.__init__ --cov=use.use -v --cov-append -vv
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: 20fb71ba-3e2b-46db-b86d-e1666d56665b
          CODECOV_TOKEN: 20fb71ba-3e2b-46db-b86d-e1666d56665b
          fail_ci_if_error: false # optional (default = false)
          files: ./.coverage,./coverage/cov.xml # optional
          flags: unittests # optional
          name: codecov-justuse # optional
          verbose: true # optional (default = false)
